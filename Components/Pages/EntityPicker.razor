@typeparam TEntity
<div class="form-group">
    <label for="product-select">Select Product:</label>
    <InputSelect id="product-select" @bind-Value="SelectedEntity">
        <option value="">-- Select a One --</option>
        @foreach (var product in Entities)
        {
            <option value="@product">@GeTModelDisplay(product)</option>
        }
    </InputSelect>
</div>

<div class="form-group">
    <label for="quantity-input">Quantity:</label>
    <InputNumber id="quantity-input" @bind-Value="Quantity" min="1" />
</div>

<button class="btn btn-primary" @onclick="TriggerSelection">Confirm Selection</button>


@code {
    [Parameter]
    public List<TEntity> Entities { get; set; } = [];

    [Parameter]
    [EditorRequired]
    public string DisplayMember { get; set; } = null!;

    [Parameter]
    public EventCallback<(TEntity Entity, double Quantity)> OnEntitySelected { get; set; } // Event for  selection

    private TEntity? SelectedEntity { get; set; }
    private int Quantity { get; set; } = 1;

    // Method to display the entity, managed internally within the component
    private string GeTModelDisplay(TEntity entity)
    {
        if (entity == null) return string.Empty;

        var entityType = entity.GetType();
        var nameProperty = entityType.GetProperty(DisplayMember);

        return nameProperty?.GetValue(entity)?.ToString() ?? entity.ToString() ?? "";
    }

    private async Task TriggerSelection()
    {
        if (SelectedEntity != null)
        {
            await OnEntitySelected.InvokeAsync((SelectedEntity, Quantity));
        }
    }
}

